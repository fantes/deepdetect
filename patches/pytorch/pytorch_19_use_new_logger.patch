diff --git a/c10/CMakeLists.txt b/c10/CMakeLists.txt
index 3d2d4352ff..5a430dc020 100644
--- a/c10/CMakeLists.txt
+++ b/c10/CMakeLists.txt
@@ -15,6 +15,7 @@ set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
 # ---[ Configure macro file.
 set(C10_USE_GFLAGS ${USE_GFLAGS}) # used in cmake_macros.h.in
 set(C10_USE_GLOG ${USE_GLOG}) # used in cmake_macros.h.in
+set(C10_USE_DDLOG ${USE_DDLOG}) # used in cmake_macros.h.in
 set(C10_BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS}) # used in cmake_macros.h.in
 set(C10_USE_NUMA ${USE_NUMA})
 set(C10_USE_MSVC_STATIC_RUNTIME ${CAFFE2_USE_MSVC_STATIC_RUNTIME})
diff --git a/c10/macros/cmake_macros.h.in b/c10/macros/cmake_macros.h.in
index a1e4fd8ce1..e8859608e6 100644
--- a/c10/macros/cmake_macros.h.in
+++ b/c10/macros/cmake_macros.h.in
@@ -6,6 +6,7 @@
 
 #cmakedefine C10_BUILD_SHARED_LIBS
 #cmakedefine C10_USE_GLOG
+#cmakedefine C10_USE_DDLOG
 #cmakedefine C10_USE_GFLAGS
 #cmakedefine C10_USE_NUMA
 #cmakedefine C10_USE_MSVC_STATIC_RUNTIME
diff --git a/c10/util/Logging.cpp b/c10/util/Logging.cpp
index 3de6623cf3..dad592fc6c 100644
--- a/c10/util/Logging.cpp
+++ b/c10/util/Logging.cpp
@@ -174,6 +174,15 @@ C10_DEFINE_int32(v, 0, "Equivalent to glog verbose");
 C10_DEFINE_bool(logtostderr, false, "Equivalent to glog logtostderr");
 #endif // !defined(c10_USE_GLOG)
 
+#if defined(C10_USE_DDLOG)
+namespace c10 {
+bool InitCaffeLogging(int* argc, char** argv) {
+  return true;
+}
+void UpdateLoggingLevelsFromFlags() {}
+
+} // namespace c10
+#else
 #ifdef C10_USE_GLOG
 
 // Provide easy access to the above variables, regardless whether GLOG is
@@ -359,3 +368,4 @@ MessageLogger::~MessageLogger() {
 } // namespace c10
 
 #endif // !C10_USE_GLOG
+#endif // !C10_USE_DDLOG
diff --git a/c10/util/Logging.h b/c10/util/Logging.h
index fd78a21fc5..6c7f1692bb 100644
--- a/c10/util/Logging.h
+++ b/c10/util/Logging.h
@@ -22,11 +22,15 @@
 #endif // CAFFE2_LOG_THRESHOLD
 
 // Below are different implementations for glog and non-glog cases.
+#ifdef C10_USE_DDLOG
+#include <c10/util/logging_is_dd_log.h>
+#else
 #ifdef C10_USE_GLOG
 #include <c10/util/logging_is_google_glog.h>
 #else // !C10_USE_GLOG
 #include <c10/util/logging_is_not_google_glog.h>
 #endif // C10_USE_GLOG
+#endif // C10_USE_DDLOG
 
 C10_DECLARE_int(caffe2_log_level);
 C10_DECLARE_bool(caffe2_use_fatal_for_enforce);
